// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using RestaurantReservationAPI.DbContexts;

#nullable disable

namespace RestaurantReservationAPI.Migrations
{
    [DbContext(typeof(RestaurantContext))]
    partial class RestaurantContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "8.0.6");

            modelBuilder.Entity("RestaurantReservationAPI.Entities.Customer", b =>
                {
                    b.Property<int>("CustomerId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(15)
                        .HasColumnType("TEXT");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(15)
                        .HasColumnType("TEXT");

                    b.HasKey("CustomerId");

                    b.ToTable("Customers", (string)null);

                    b.HasData(
                        new
                        {
                            CustomerId = 1,
                            FirstName = "Alice",
                            LastName = "Johnson"
                        },
                        new
                        {
                            CustomerId = 2,
                            FirstName = "Bob",
                            LastName = "Brown"
                        },
                        new
                        {
                            CustomerId = 3,
                            FirstName = "Charlie",
                            LastName = "Davis"
                        },
                        new
                        {
                            CustomerId = 4,
                            FirstName = "David",
                            LastName = "Miller"
                        },
                        new
                        {
                            CustomerId = 5,
                            FirstName = "Eva",
                            LastName = "Wilson"
                        },
                        new
                        {
                            CustomerId = 6,
                            FirstName = "Frank",
                            LastName = "Moore"
                        });
                });

            modelBuilder.Entity("RestaurantReservationAPI.Entities.Employee", b =>
                {
                    b.Property<int>("EmployeeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(15)
                        .HasColumnType("TEXT");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(15)
                        .HasColumnType("TEXT");

                    b.Property<int>("Role")
                        .HasColumnType("INTEGER");

                    b.HasKey("EmployeeId");

                    b.ToTable("Employees", (string)null);

                    b.HasData(
                        new
                        {
                            EmployeeId = 1,
                            FirstName = "John",
                            LastName = "Doe",
                            Role = 2
                        },
                        new
                        {
                            EmployeeId = 2,
                            FirstName = "Jane",
                            LastName = "Smith",
                            Role = 1
                        },
                        new
                        {
                            EmployeeId = 3,
                            FirstName = "Alice",
                            LastName = "Johnson",
                            Role = 2
                        });
                });

            modelBuilder.Entity("RestaurantReservationAPI.Entities.MenuItem", b =>
                {
                    b.Property<int>("MenuItemId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("TEXT");

                    b.Property<decimal>("Price")
                        .HasColumnType("TEXT");

                    b.HasKey("MenuItemId");

                    b.ToTable("MenuItems", (string)null);

                    b.HasData(
                        new
                        {
                            MenuItemId = 1,
                            Description = "Juicy beef patty with melted cheese, lettuce, and tomato, served on a sesame seed bun.",
                            Name = "Cheeseburger",
                            Price = 9.99m
                        },
                        new
                        {
                            MenuItemId = 2,
                            Description = "Classic Italian pizza topped with tomato sauce, mozzarella, and fresh basil leaves.",
                            Name = "Margherita Pizza",
                            Price = 12.99m
                        },
                        new
                        {
                            MenuItemId = 3,
                            Description = "Crisp romaine lettuce topped with grilled chicken breast strips, croutons, and Caesar dressing.",
                            Name = "Chicken Caesar Salad",
                            Price = 8.49m
                        },
                        new
                        {
                            MenuItemId = 4,
                            Description = "Spaghetti pasta served with rich Bolognese sauce made with ground beef, tomatoes, and herbs.",
                            Name = "Spaghetti Bolognese",
                            Price = 11.99m
                        },
                        new
                        {
                            MenuItemId = 5,
                            Description = "Assorted fresh vegetables stir-fried in a savory sauce served with steamed rice.",
                            Name = "Vegetable Stir-Fry",
                            Price = 10.49m
                        },
                        new
                        {
                            MenuItemId = 6,
                            Description = "Warm chocolate brownie topped with vanilla ice cream, chocolate syrup, whipped cream, and a cherry.",
                            Name = "Chocolate Brownie Sundae",
                            Price = 6.99m
                        },
                        new
                        {
                            MenuItemId = 7,
                            Description = "Fresh salmon fillet grilled to perfection, served with roasted vegetables and lemon wedges.",
                            Name = "Grilled Salmon",
                            Price = 14.99m
                        },
                        new
                        {
                            MenuItemId = 8,
                            Description = "Creamy Arborio rice cooked with mushrooms, onions, garlic, and Parmesan cheese.",
                            Name = "Mushroom Risotto",
                            Price = 13.49m
                        },
                        new
                        {
                            MenuItemId = 10,
                            Description = "Tender pork ribs basted in barbecue sauce, served with coleslaw and fries.",
                            Name = "BBQ Ribs",
                            Price = 16.99m
                        });
                });

            modelBuilder.Entity("RestaurantReservationAPI.Entities.Order", b =>
                {
                    b.Property<int>("OrderId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("EmployeeId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("ReservationId")
                        .HasColumnType("INTEGER");

                    b.HasKey("OrderId");

                    b.HasIndex("EmployeeId");

                    b.HasIndex("ReservationId");

                    b.ToTable("Orders", (string)null);

                    b.HasData(
                        new
                        {
                            OrderId = 1,
                            EmployeeId = 1,
                            ReservationId = 1
                        },
                        new
                        {
                            OrderId = 2,
                            EmployeeId = 2,
                            ReservationId = 2
                        },
                        new
                        {
                            OrderId = 3,
                            EmployeeId = 3,
                            ReservationId = 3
                        },
                        new
                        {
                            OrderId = 4,
                            EmployeeId = 1,
                            ReservationId = 4
                        },
                        new
                        {
                            OrderId = 5,
                            EmployeeId = 2,
                            ReservationId = 5
                        },
                        new
                        {
                            OrderId = 6,
                            EmployeeId = 3,
                            ReservationId = 6
                        });
                });

            modelBuilder.Entity("RestaurantReservationAPI.Entities.OrderItem", b =>
                {
                    b.Property<int>("OrderItemId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("MenuItemId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("OrderId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Quantity")
                        .HasColumnType("INTEGER");

                    b.HasKey("OrderItemId");

                    b.HasIndex("MenuItemId");

                    b.HasIndex("OrderId");

                    b.ToTable("OrderItems", (string)null);

                    b.HasData(
                        new
                        {
                            OrderItemId = 1,
                            MenuItemId = 5,
                            OrderId = 1,
                            Quantity = 1
                        },
                        new
                        {
                            OrderItemId = 2,
                            MenuItemId = 1,
                            OrderId = 2,
                            Quantity = 2
                        },
                        new
                        {
                            OrderItemId = 3,
                            MenuItemId = 10,
                            OrderId = 2,
                            Quantity = 1
                        },
                        new
                        {
                            OrderItemId = 4,
                            MenuItemId = 2,
                            OrderId = 3,
                            Quantity = 1
                        },
                        new
                        {
                            OrderItemId = 5,
                            MenuItemId = 7,
                            OrderId = 3,
                            Quantity = 1
                        },
                        new
                        {
                            OrderItemId = 6,
                            MenuItemId = 4,
                            OrderId = 4,
                            Quantity = 2
                        },
                        new
                        {
                            OrderItemId = 7,
                            MenuItemId = 6,
                            OrderId = 5,
                            Quantity = 1
                        },
                        new
                        {
                            OrderItemId = 8,
                            MenuItemId = 3,
                            OrderId = 6,
                            Quantity = 1
                        },
                        new
                        {
                            OrderItemId = 9,
                            MenuItemId = 8,
                            OrderId = 6,
                            Quantity = 1
                        });
                });

            modelBuilder.Entity("RestaurantReservationAPI.Entities.Reservation", b =>
                {
                    b.Property<int>("ReservationId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("CustomerId")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("Date")
                        .HasColumnType("TEXT");

                    b.Property<string>("Notes")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("NumberOfGuests")
                        .HasColumnType("INTEGER");

                    b.HasKey("ReservationId");

                    b.HasIndex("CustomerId");

                    b.ToTable("Reservations", (string)null);

                    b.HasData(
                        new
                        {
                            ReservationId = 1,
                            CustomerId = 1,
                            Date = new DateTime(2024, 6, 2, 18, 19, 44, 581, DateTimeKind.Local).AddTicks(1823),
                            Notes = "",
                            NumberOfGuests = 2
                        },
                        new
                        {
                            ReservationId = 2,
                            CustomerId = 2,
                            Date = new DateTime(2024, 6, 3, 18, 19, 44, 581, DateTimeKind.Local).AddTicks(1838),
                            Notes = "",
                            NumberOfGuests = 4
                        },
                        new
                        {
                            ReservationId = 3,
                            CustomerId = 3,
                            Date = new DateTime(2024, 6, 4, 18, 19, 44, 581, DateTimeKind.Local).AddTicks(1840),
                            Notes = "",
                            NumberOfGuests = 3
                        },
                        new
                        {
                            ReservationId = 4,
                            CustomerId = 4,
                            Date = new DateTime(2024, 6, 5, 18, 19, 44, 581, DateTimeKind.Local).AddTicks(1841),
                            Notes = "",
                            NumberOfGuests = 5
                        },
                        new
                        {
                            ReservationId = 5,
                            CustomerId = 5,
                            Date = new DateTime(2024, 6, 6, 18, 19, 44, 581, DateTimeKind.Local).AddTicks(1842),
                            Notes = "",
                            NumberOfGuests = 1
                        },
                        new
                        {
                            ReservationId = 6,
                            CustomerId = 6,
                            Date = new DateTime(2024, 6, 7, 18, 19, 44, 581, DateTimeKind.Local).AddTicks(1844),
                            Notes = "",
                            NumberOfGuests = 2
                        });
                });

            modelBuilder.Entity("RestaurantReservationAPI.Entities.Order", b =>
                {
                    b.HasOne("RestaurantReservationAPI.Entities.Employee", "Employee")
                        .WithMany()
                        .HasForeignKey("EmployeeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("RestaurantReservationAPI.Entities.Reservation", "Reservation")
                        .WithMany("Orders")
                        .HasForeignKey("ReservationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Employee");

                    b.Navigation("Reservation");
                });

            modelBuilder.Entity("RestaurantReservationAPI.Entities.OrderItem", b =>
                {
                    b.HasOne("RestaurantReservationAPI.Entities.MenuItem", "Item")
                        .WithMany()
                        .HasForeignKey("MenuItemId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("RestaurantReservationAPI.Entities.Order", "Order")
                        .WithMany("OrderItems")
                        .HasForeignKey("OrderId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Item");

                    b.Navigation("Order");
                });

            modelBuilder.Entity("RestaurantReservationAPI.Entities.Reservation", b =>
                {
                    b.HasOne("RestaurantReservationAPI.Entities.Customer", "Customer")
                        .WithMany()
                        .HasForeignKey("CustomerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Customer");
                });

            modelBuilder.Entity("RestaurantReservationAPI.Entities.Order", b =>
                {
                    b.Navigation("OrderItems");
                });

            modelBuilder.Entity("RestaurantReservationAPI.Entities.Reservation", b =>
                {
                    b.Navigation("Orders");
                });
#pragma warning restore 612, 618
        }
    }
}
